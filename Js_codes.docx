Code 1: Remove Duplicate characters from String
function removeDuplicateCharacters(){
  let str="Hi Prem How are doing";
  let result=str.split('').filter((item,index,arr)=>{    
             return arr.indexOf(item)==index    
             }).join('');
  return result;  
}
console.log(removeDuplicateCharacters())
**************************************************************************************************************************************************************************
code 2: Removes Duplicates in array using Set
var arr=[40,50,7,8,7,8,8,8,8,8,24,2,4,5,7,9,24,5]
var remove=[...new Set(arr)]
console.log(remove) //output:[40, 50, 7, 8, 24, 2, 4, 5, 9]
console.log(remove.length) //output:9
***********************************************************************************************************************************************************************
Code 3:String reverse
function letterReverse(){
  var str="I love bangalore"
  let result=str.split('').reverse().join('')
  return result
}
console.log(letterReverse()) //output:"erolagnab evol I"
************************************************************************************************************************************************************************
Code 4: Find factorial of user input number
const number=parseInt(prompt('Enter your number:'))
if(number<0){
  console.log("Error! Factorial of negative number does not exits.")
}
else if(number===0){
  console.log('The factorial is 1.')
}
else{
  fact=1;
  for(i=1;i<=number;i++)
  {
    fact*=i;
  }
  console.log(`The factorial is ${fact}`);  //output:"The factorial is 6"
}
************************************************************************************************************************************************************************
Code 5: To find longest word from a string using (for of)
function longestWord(){
  let str="Prem native is at pidaripatty currently in bangalore"
  var words=str.split(' ')
  var longest=' '
  for(var word of words){
    console.log(word) 
    if(word.length > longest.length)
    {
      longest=word
    }    
  }
  return longest.length
}
console.log(longestWord()) //output:11
******************************************************************************************************************************************************************************
Code 6: To find longest word from a string using functions
function findLongestWord(){
  let str="prem is a goog boy and he capable of doing anything in the world"
  let wordstr=str.split(' ').sort((a,b)=>{
    return b.length-a.length    
  })
  console.log(wordstr[0])
}
findLongestWord()  //output:"anything"
******************************************************************************************************************************************************************************
Code 7: To find longest common string from array of strings
function longestCommonString(){
  array=['go','got','google']
  var arr=array.sort()
  var i=0
  while(arr[0].length>0 && arr[0].charAt(i)===arr[arr.length-1].charAt(i)){
    i++
  }
  console.log(arr[0].substring(0,i)) //output:"go"
  return arr[0].substring(0,i)
}
longestCommonString()
***************************************************************************************************************************************************************************
Code 8: To find vowels and its count in a given string
function vowelCounts(){
  vowels=['a','e','i','o','u']
  var str='prem'
  count=0
  for(var letter of str.toLowerCase()){
    if(vowels.includes(letter)){
      count++
      console.log(letter)  //output:"e"
    }
  }
  console.log(count)  //output:1
  return count
}
vowelCounts()
**********************************************************************************************************************************************************************************
Code 9: To find a first pair whose sum is zero
function findSumPair(array){
  for(let i=0;i<array.length;i++){
    for(let j=1;j<array.length;j++){
      if(array[i]+array[j]===0){
        return [array[i],array[j]]
      }
    }
  }
}
const result=findSumPair([-5,-4,-3,-2,-1,0,1,2,3,4,6])
console.log(result) //output:[-4, 4]
************************************************************************************************************************************************************************************
Code 10: To find a first pair whose sum is zero using indexing //Firstly do a sort here
function findSumIndex(array){
  let left=0
  let right=array.length-1
  while(left<right){
    sum=array[left]+array[right]
    if(sum===0){
      return [array[left],array[right]]; 
    }else if(sum>0){
      right--
    }else
      left++
  }
}
const result=findSumIndex([-3,-2,-1,0,1,2,3,4])
console.log(result) //output:[-3, 3]
****************************************************************************************************************************************************************************************
Code 11: To find the largest pair of the 2 elements using indexing with unsorted elements
function largestPair(number){
  let num=number.sort((a,b)=>b-a)
  return num[0]+num[1]
}
const result=largestPair([4,5,6,2,3,8,9,7])
console.log(result) //output:17
**********************************************************************************************************************************************************************************
Code 11: Fibonacci Series
function fibonacciSeries(){
  const number=prompt("Enter the number")
  let n1=0, n2=1, nextarray, arr=[]
  arr.push(n1)
  arr.push(n2)
  for(let i=1;i<=number;i++){
    nextarray=n1+n2
    n1=n2
    n2=nextarray
    arr.push(nextarray)
  }
  return arr
}
console.log(fibonacciSeries()) //output:[0, 1, 1, 2, 3, 5, 8]
*********************************************************************************************************************************************************************************
Code 11: Finding a missing elements in an array and then add with existing elements.
function missingElement(){
  var a=[1,2,5]
  var missing=[]
  for(i=1;i<6;i++){
    if(a.indexOf(i)==-1){
      missing.push(i)
    }
  }
  console.log(a.concat(missing).sort()) //output:[1, 2, 3, 4, 5]
}
missingElement()
************************************************************************************************************************************************************************************
Code 11: Find the missing no. in an array
function missing(arr){
  var x=0
  for(let i=0;i<arr.length;i++){
    x=x+1
    if(arr[i]!=x){
      return(x)
    }
  }
}
console.log(missing([1,2,3,4,5,6,7,8,10])) //output:9
******************************************************************************************************************************************************************************
Code 12: To check if given number is prime or not
function checkPrime(num){
  if(num<2){
    return false
  }
  for(let k=2;k<num;k++){
    if(num%k==0){
      return false;
    }
    return true
  }
}
console.log(checkPrime(17)) //output:true
*****************************************************************************************************************************************************************************
Code 13: To print all the numbers from 2 to 100
for(let i=2;i<=100;i++){
  let flag=0
  for(let j=2;j<i;j++){
    if(i%j==0){
      flag=1
      break;
    }
    }
  if(flag==0 && i>1){
      console.log(i)
  }
}
***************************************************************************************************************************************************************************************
Code 13: To find unique values from 2 arrays and keep into one array
function uniqueElements(arr1,arr2){
  var num=[...arr1,...arr2]
  var val=[...new Set(num)]
  console.log(val) //output:[1, 2, 3, 4, 5, 6, 8, 9, 7]
}
uniqueElements([1,2,3,4,5,6],[2,3,4,8,9,7])
*********************************************************************************************************************************************************************************
Code 14: Find first duplicate element from an array
function firstDuplicate(){
  let arr=[1,2,2,3,4,5]
  let data={}
  for(var item of arr){
    if(data[item]){
      return
    }
    else{
      data[item]=item
      console.log(data[item]) //output:1,2
    }
  }
  return -1
}
firstDuplicate()
**********************************************************************************************************************************************************************************
Code 15: Uppercase of each first letter of a words using map function
function changeFirstLetter(){
  var string='i love bangalore'
  var words=string.toLowerCase().split(' ')
  for(var i=0;i<words.length;i++){
    words[i]=words[i][0].toUpperCase() + words[i].slice(1)
  }
  return words.join(" ")
}
console.log(changeFirstLetter()) //output:"I Love Bangalore"
******************************************************************************************************************************************************************************
Code 16: To find the largest elements fro the 2 dimensional array
function largestFromArray(arr){
  var max=[]
  for(let i=0;i<arr.length;i++){
    var tempMax=arr[i][0]
    for(let j=0;j<arr[i].length;j++){
      var curMax=arr[i][j]
      if(curMax>=tempMax){
        tempMax=curMax
      }
    }
    max.push(tempMax)
  }
  console.log(max) //output:[4, 89, 98]
}
largestFromArray([[1,2,3,4],[56,89,45,78],[98,5,6]])
********************************************************************************************************************************************************************************
Code 17: To find the largest elements for the 2 dimensional array in another way
function largestOneElement(arr){
  var max=[0,0,0]
  for(var i=0;i<arr.length;i++){
    for(var j=0;j<arr[i].length;j++){
      if(arr[i][j]>=max[i]){
        max[i]=arr[i][j]
      }
    }
  }
  console.log(max) //output:[4, 89, 98]
}
largestOneElement([[1,2,3,4],[56,89,45,78],[98,5,6]])
***********************************************************************************************************************************************************************************
Code 18: Print string n times using inbuilt function
function repeatValue(str,num){
  if(num<1) return""
  return str.repeat(num)
}
console.log(repeatValue("pk",5))  //output:"pkpkpkpkpk"
***********************************************************************************************************************************************************************************
Code 19: Converting one dimensional array into n dimensional array using slice
function chunkArray(arr,num){
  var group=[]
  while(arr.length>0){
    group.push(arr.slice(0,num))
    arr=arr.slice(num)
  }
  return group
}
console.log(chunkArray(['a','b','c','d'],2)) //output:[["a", "b"], ["c", "d"]]
**********************************************************************************************************************************************************************************
Code 20: To find only truthy values using filter
function removeFalseValue(arr){
  return arr.filter((item)=>{
    return item
  })
}
console.log(removeFalseValue([true,false,'prem',0,8,'bangalore'])) //output:[true, "prem", 8, "bangalore"]
**********************************************************************************************************************************************************************************
Code 21: Checking all letters of second words should present in first word, in the same order using include function
function checkLetter(arr){
  var first=arr[0].toLowerCase()
  var second=arr[1].toLowerCase()
  for(var letter of second){
    if(!first.includes(second))
      return false
  }
  return true
}
console.log(checkLetter(['bangalore','bang'])) //output:true
***************************************************************************************************************************************************************************************
Code 22: Unique values only from 2 arrays
function  diffElement(arr1,arr2){
  var result=[]
  for(let i=0;i<arr1.length;i++){
    if(arr2.indexOf(arr1[i]) === -1){
      result.push(arr1[i])
    }
  }
  for(let j=0;j<arr2.length;j++){
    if(arr1.indexOf(arr2[j]) === -1){
      result.push(arr2[j])
    }
  }
  return result
}
console.log(diffElement([1,2,3,4],[2,3,4,5])) //output:[1, 5]
****************************************************************************************************************************************************************************************
code 23: Sum of all numbers from start to end given number
function sumElement(arr){
  sum=0
  let start=Math.min(arr[0],arr[1])
  let end=Math.max(arr[0],arr[1])
  for(var i=start;i<=end;i++){
    sum+=i
  }
  return sum
}
console.log(sumElement([0,5])) //output:15
*****************************************************************************************************************************************************************************************
code 24: Removing Array Items By Value Using Splice
var arr=[1,2,3,4,5,6,7,8,9,0]
for (let i=0;i<arr.length;i++){
  if(arr[i]===5){
    arr.splice(i,1)
    i--
  }
}
  console.log(arr) //output:[1, 2, 3, 4, 6, 7, 8, 9, 0]
  *******************************************************************************************************************************************************************************
code 25: Reverse of a nuber using converting into string
function reverseNumber(input){
  return (parseFloat(input.toString().split('').reverse().join(''))*Math.sign(input))
}
console.log(reverseNumber(-123)) //output:-321
*********************************************************************************************************************************************************************************
Code 26: Currying function i.e sum of multiple argument functions //inner function can access outer function variables but outer functions can't able to acceess inner function.
function sum(a){
  return function sum(b){
    return function sum(c){
      return function sum(d){
         return a+b+c+d;
      }
    }
  }
}
console.log(sum(1)(2)(3)(4)) //output:10

OR

const sum = (a) => (b) => (c) => (d) => a+b+c+d // using ES6
console.log(sum(1)(2)(3)(4)) //output:10
***********************************************************************************************************************************************************************************
Code 27: Find AVERAGE of the numbers //accumulation means collection
let arr=[1,2,3,4,5]
let average=arr.reduce((accum,curr,index,array)=>{
  var total=accum+curr;
  if(index===array.length-1){
    return total/array.length
  }
  return total
})
console.log(average)  //output:3
**********************************************************************************************************************************************************************************
Code 28: Convert 2D/3D array into 1D using reduce function and inbuilt function i.e flat
const arr=[['a','b'],['c','d',['e','d']]]
console.log(arr.flat(2)) //output:["a", "b", "c", "d", "e", "d"]
**********************************************************************************************************************************************************************************
code 29: Reverse of a number
function reverseNumber(num){
  var result=0
  while(num!=0){
    result=result*10
    result=result+(num%10)
    num=Math.floor(num/10)
  }
  return result
}
console.log(reverseNumber(123)) //output:321
**********************************************************************************************************************************************************************************
code 30: Check Armstrong Number
function armstrongNumber(num){
  var temp=num
  var result=0
  var a
  while(temp!=0){
    a=temp%10
    temp=parseInt(temp/10)
    result=result+a*a*a
  }
  if(num==result){
    return true
  }
  else{
    return false
  }
}
console.log(armstrongNumber(153)) //output:true
**********************************************************************************************************************************************************************************
code 31: To find the closest number in an array
// let needle = 5;
// let number = [1, 3, 10, 2, 7, 4, 9];
// number.sort((a, b) => {
//   console.log(Math.abs(needle - a));
//   return Math.abs(needle - a) - Math.abs(needle - b);
// });
// console.log(number[0]); //output:4

const num = [10, 5, 20];
num.sort((a, b) => a - b);
console.log(num); //output:[ 5, 10, 20 ]
*********************************************************************************************************************************************************************************
code 31: To check whether particular word/number present in sentence or not using custom function
function validateChar(arr,item){
  var status="Not exits"
  for(var i=0;i<arr.length;i++){
    if(arr[i]===item){
      status="Exits"
      break
    }
  }
  return status
}
console.log(validateChar(['Hi','Prem'],'Prem'))  //output:"Exits"
*********************************************************************************************************************************************************************************
code 32: To check wheather property exist or not in object
let city={
  name:'Bangalore',
  state:'Karnataka'
}
console.log(city.hasOwnProperty('name')) //output:true
*********************************************************************************************************************************************************************************
code 33: Star Pattern
for(let i=0;i<=4;i++){
  for(j=i;j<=4;j++){
    document.write('*')
  }
  document.write("<br>")
}
//output:
*****
****
***
**
*
************************************************************************************************************************************************************************************
code 34: To find the square root
let num=[2,4,9,16,25,36,49]
let val=num.map(Math.sqrt)
console.log(val) //output:[1.4142135623730951, 2, 3, 4, 5, 6, 7]
************************************************************************************************************************************************************************************











































